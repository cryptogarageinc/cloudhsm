name: create-release-upload

on: 
  push:
    tags:
    - 'v*'

jobs:
  create_releases:
    name: create-releases
    runs-on: ubuntu-20.04
    outputs:
      release_url: ${{ steps.output_url.outputs.upload_url }}

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: true
      continue-on-error: true
    - name: Get release
      if: steps.create_release.outcome == 'failure'
      id: get_release
      uses: bruceadams/get-release@v1.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: output url
      id: output_url
      run: |
        echo "::set-output name=upload_url::${{steps.get_release.outputs.upload_url}}${{steps.create_release.outputs.upload_url}}"

  upload-object-alpine-3-10:
    name: upload-object-alpine 3.10
    runs-on: ubuntu-20.04
    needs: create_releases

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: output url
      id: get_url
      run: echo "::set-output name=upload_url::${{ needs.create_releases.outputs.release_url }}"
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: list
      run: ls -a $GITHUB_WORKSPACE
    - name: docker setup
      uses: docker://alpine:3.10
      with:
        entrypoint: /github/workspace/.github/workflows/docker/alpine_build_entrypoint.sh
    - name: create archive file
      run: |
        echo "---- dump output data ----"
        ls -l $GITHUB_WORKSPACE/dist/usr/local/*
        mkdir -p /tmp/cloudhsm
        sudo chmod 777 /tmp/cloudhsm
        sudo chown runner /tmp/cloudhsm
        sudo cp -r $GITHUB_WORKSPACE/dist/usr /tmp/cloudhsm
        cd /tmp/cloudhsm
        sudo zip -r /tmp/cloudhsm/cloudhsm.zip usr
        sudo chmod 777 /tmp/cloudhsm/cloudhsm.zip
        sudo chown runner /tmp/cloudhsm/cloudhsm.zip
        sudo cp -rp /tmp/cloudhsm/cloudhsm.zip $GITHUB_WORKSPACE/dist/cloudhsm.zip
        echo "---- dump zip file ----"
        sudo ls -l /tmp/cloudhsm
    - name: pre-release-test
      uses: docker://golang:1.13-alpine3.10
      with:
        entrypoint: /github/workspace/.github/workflows/docker/alpine_test_entrypoint.sh
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: /tmp/cloudhsm/cloudhsm.zip
        asset_name: cloudhsm-${{ steps.get_version.outputs.VERSION }}-alpine_x86_64.zip
        asset_content_type: application/zip

  upload-object-alpine-3-12:
    name: upload-object-alpine 3.12
    runs-on: ubuntu-20.04
    needs: create_releases

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: output url
      id: get_url
      run: echo "::set-output name=upload_url::${{ needs.create_releases.outputs.release_url }}"
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: list
      run: ls -a $GITHUB_WORKSPACE
    - name: docker setup
      uses: docker://alpine:3.12
      with:
        entrypoint: /github/workspace/.github/workflows/docker/alpine_build_entrypoint.sh
    - name: create archive file
      run: |
        echo "---- dump output data ----"
        ls -l $GITHUB_WORKSPACE/dist/usr/local/*
        mkdir -p /tmp/cloudhsm
        sudo chmod 777 /tmp/cloudhsm
        sudo chown runner /tmp/cloudhsm
        sudo cp -r $GITHUB_WORKSPACE/dist/usr /tmp/cloudhsm
        cd /tmp/cloudhsm
        sudo zip -r /tmp/cloudhsm/cloudhsm.zip usr
        sudo chmod 777 /tmp/cloudhsm/cloudhsm.zip
        sudo chown runner /tmp/cloudhsm/cloudhsm.zip
        sudo cp -rp /tmp/cloudhsm/cloudhsm.zip $GITHUB_WORKSPACE/dist/cloudhsm.zip
        echo "---- dump zip file ----"
        sudo ls -l /tmp/cloudhsm
    - name: pre-release-test
      uses: docker://golang:1.15-alpine3.12
      with:
        entrypoint: /github/workspace/.github/workflows/docker/alpine_test_entrypoint.sh
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: /tmp/cloudhsm/cloudhsm.zip
        asset_name: cloudhsm-${{ steps.get_version.outputs.VERSION }}-alpine-3.12-x86_64.zip
        asset_content_type: application/zip

  upload-object-alpine-3-13:
    name: upload-object-alpine 3.13
    runs-on: ubuntu-20.04
    needs: create_releases

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: output url
      id: get_url
      run: echo "::set-output name=upload_url::${{ needs.create_releases.outputs.release_url }}"
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: list
      run: ls -a $GITHUB_WORKSPACE
    - name: docker setup
      uses: docker://alpine:3.13
      with:
        entrypoint: /github/workspace/.github/workflows/docker/alpine_build_entrypoint.sh
    - name: create archive file
      run: |
        echo "---- dump output data ----"
        ls -l $GITHUB_WORKSPACE/dist/usr/local/*
        mkdir -p /tmp/cloudhsm
        sudo chmod 777 /tmp/cloudhsm
        sudo chown runner /tmp/cloudhsm
        sudo cp -r $GITHUB_WORKSPACE/dist/usr /tmp/cloudhsm
        cd /tmp/cloudhsm
        sudo zip -r /tmp/cloudhsm/cloudhsm.zip usr
        sudo chmod 777 /tmp/cloudhsm/cloudhsm.zip
        sudo chown runner /tmp/cloudhsm/cloudhsm.zip
        sudo cp -rp /tmp/cloudhsm/cloudhsm.zip $GITHUB_WORKSPACE/dist/cloudhsm.zip
        echo "---- dump zip file ----"
        sudo ls -l /tmp/cloudhsm
    - name: pre-release-test
      uses: docker://golang:1.16-alpine3.13
      with:
        entrypoint: /github/workspace/.github/workflows/docker/alpine_test_entrypoint.sh
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: /tmp/cloudhsm/cloudhsm.zip
        asset_name: cloudhsm-${{ steps.get_version.outputs.VERSION }}-alpine-3.13-x86_64.zip
        asset_content_type: application/zip

  upload-object-ubuntu:
    name: upload-object-ubuntu
    needs: create_releases
    runs-on: ubuntu-${{ matrix.os_ver }}.04
    strategy:
      matrix:
        os_ver: [20, 18, 16]
        bin: [gcc, gcc-static]
        include:
          - bin: gcc
            shared: on
          - bin: gcc-static
            shared: off

    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: output url
      id: get_url
      run: echo "::set-output name=upload_url::${{ needs.create_releases.outputs.release_url }}"
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: list
      run: ls -a $GITHUB_WORKSPACE
    - name: cmake-build
      id: cmake_build
      run: |
        sudo rm -rf build
        mkdir build
        cd build
        cmake --version
        cmake .. -DENABLE_SHARED=on -DCMAKE_BUILD_TYPE=Release -DTARGET_RPATH="/usr/local/lib"
        make
        cd ..
        export CURRENT_DIR=$(pwd)
        echo ::set-output name=CURRENT_DIR::$CURRENT_DIR
    - name: cmake-install
      run: |
        sudo rm -rf dist
        mkdir dist
        cd build
        make install DESTDIR=../dist
        cd ..
    - name: create archive file
      run: |
        cd dist
        zip -r cloudhsm.zip usr
        echo "---- dump zip file ----"
        ls -l
    - name: Upload Release Asset Ubuntu-18.04
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_url.outputs.upload_url }}
        asset_path: ./dist/cloudhsm.zip
        asset_name: cloudhsm-${{ steps.get_version.outputs.VERSION }}-ubuntu${{ matrix.os_ver }}04-${{ matrix.bin }}-x86_64.zip
        asset_content_type: application/zip
